#include <iostream>
#include <vector>
#include <algorithm> // For reverse()

using namespace std;

// Function to reverse a portion of the array
void reverseArray(vector<int>& nums, int start, int end) {
    while (start < end) {
        swap(nums[start], nums[end]);
        start++;
        end--;
    }
}

// Function to rotate the array to the right by k steps
void rotateArray(vector<int>& nums, int k) {
    int n = nums.size();
    if (n == 0) return;  // Edge case: Empty array

    k = k % n;  // If k is larger than n, take the modulo
    if (k == 0) return;  // No need to rotate if k is 0

    // Step 1: Reverse the entire array
    reverseArray(nums, 0, n - 1);
    // Step 2: Reverse the first k elements
    reverseArray(nums, 0, k - 1);
    // Step 3: Reverse the remaining elements
    reverseArray(nums, k, n - 1);
}

int main() {
    vector<int> nums = {1, 2, 3, 4, 5, 6, 7};
    int k = 3;

    cout << "Original Array: ";
    for (int num : nums) cout << num << " ";
    cout << endl;

    rotateArray(nums, k);

    cout << "Rotated Array: ";
    for (int num : nums) cout << num << " ";
    cout << endl;

    return 0;
}
